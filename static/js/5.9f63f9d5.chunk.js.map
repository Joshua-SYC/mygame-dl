{"version":3,"sources":["pages/Stats/Col1/StatsTable.jsx","pages/Stats/Col1/SelectEnemy.jsx","pages/Stats/Col1/DamageBar.jsx","pages/Stats/Col1/Dungeon.jsx","pages/Stats/Col1/Col1.jsx","pages/Stats/Col1/index.js","pages/Stats/Col2/SplitBtn.jsx","pages/Stats/Col2/SelectItem.jsx","pages/Stats/Col2/Item.jsx","pages/Stats/Col2/Col2.jsx","pages/Stats/Col2/index.js","pages/Stats/Col3/Items/Filter.jsx","pages/Stats/Col3/Items/Item.jsx","pages/Stats/Col3/Items/ItemList.jsx","pages/Stats/Col3/Items/Items.jsx","pages/Stats/Col3/Items/index.js","pages/Stats/Col3/Halidom/HalidomItem.jsx","pages/Stats/Col3/Halidom/Halidom.jsx","pages/Stats/Col3/Halidom/index.js","pages/Stats/Col3/Col3.jsx","pages/Stats/Col3/index.js","pages/Stats/Stats.jsx","pages/Stats/index.js"],"names":["ROWS","connect","state","theme","details","getDetails","disabled","expend","lang","setExpend","className","clsx","id","style","getPaperBGC","title","locales","checked","setChecked","map","key","hp","str","might","calcVal","total","enemyOptions","Object","keys","ENEMY_INFO","SelectEnemy","memo","props","name","value","onChange","ref","useRef","useState","expand","setExpand","arrow","imageURL","process","handleChange","e","val","currentTarget","getAttribute","current","focus","useEffect","closeOptions","setTimeout","window","addEventListener","removeEventListener","backgroundImage","role","tabIndex","onClick","prevExpand","onKeyDown","opt","optClass","aria-selected","image","getDamage","min","max","pct","background","fontSize","toFixed","fields","AxeEXCritDamage","adventurer","items","dcrStr","def","difficulty","enemy","exHp","exDef","multiplier","res","settings","setSettings","eleRef","difficultyOptions","useMemo","label","handleSelect","useCallback","prevSettings","handleInput","target","info","Element","Weapon","Id","Rarity","ex","ELEMENT_ADV_TO_ENEMY","COABILITY_VALUE","includes","options","step","Col1","refs","col1","mapDispatchToProps","delBuild","loadBuild","saveBuild","builds","arrowClassName","build","type","prevState","entries","item","content","getImage","size","SELECT_OPTIONS","mana","curRarity","default","SelectItem","rarity","spiral","length","updateItem","focused","level","bond","unbind","timeRef","changeInput","LimitBreak","key1","r","getLimit","itemKey","updates","useEvent","limit","getUpdates","Number","clearTimeout","undefined","breakLimit","maxItem","resetItems","selectFocus","Col2","handleFocus","_","setMax","col2","scroll","offsetTop","ITEM_KEYS","active","Name","en","augHp","augStr","augments","selectOption","resetOptions","getFilterFields","search","setSearch","handleFilter","icon","group","placeholder","selectItem","data","index","useParams","Skill","Icon","handleClick","scrollTo","getOutBGC","Image","list","getItemList","listRef","scrollToItem","height","width","itemSize","itemCount","itemData","Item","Items","updateHalidom","halidomKey","columnIndex","rowIndex","cols","keyArr","getHalidomKey","halidom","getFacilityMaxLevel","btns","loadHalidom","Halidom","keyList","getFilteredHalidomKey","removeState","saveState","setPanel","Col3","panel","col3","loadBuilds","Stats"],"mappings":"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","file":"static/js/5.9f63f9d5.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport locales from 'locales';\r\nimport { Checkbox } from 'components';\r\nimport { calcVal, getDetails, getPaperBGC } from 'utils';\r\n\r\nconst ROWS = [\r\n  'adventurer',\r\n  'weapon',\r\n  'wyrmprint1',\r\n  'wyrmprint2',\r\n  'dragon',\r\n  'augments',\r\n  'ability',\r\n  'halidom',\r\n];\r\n\r\nfunction StatsTable({ disabled, details, expend, lang, theme, setExpend }) {\r\n  const className = clsx({ expend });\r\n\r\n  return (\r\n    <div id=\"stats-table\" className=\"paper\" style={getPaperBGC(theme)}>\r\n      <div id=\"header\">\r\n        <Checkbox\r\n          lang={lang}\r\n          disabled={disabled}\r\n          title={locales('details', lang)}\r\n          checked={expend}\r\n          setChecked={setExpend}\r\n        />\r\n        <span>HP</span>\r\n        <span>{locales('str', lang)}</span>\r\n        <span>{locales('might', lang)}</span>\r\n      </div>\r\n\r\n      <div id=\"body\" className={className}>\r\n        {ROWS.map(key => {\r\n          const { hp = '0', str = '0', might = '0' } = details[key] || {};\r\n          return (\r\n            <Fragment key={key}>\r\n              <span>{locales(key, lang)}</span>\r\n              <span>{hp}</span>\r\n              <span>{str}</span>\r\n              <span>{might}</span>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div id=\"footer\" className={className}>\r\n        <span>{locales('total', lang)}</span>\r\n        <span>{calcVal(details.total.hp)}</span>\r\n        <span>{calcVal(details.total.str)}</span>\r\n        <span>{details.total.might}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: state.theme,\r\n    details: getDetails(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(StatsTable);\r\n","import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { ENEMY_INFO } from 'data';\r\nimport { Image } from 'components';\r\n\r\nconst enemyOptions = Object.keys(ENEMY_INFO);\r\n\r\nconst SelectEnemy = memo(function SelectEnemy(props) {\r\n  const { name, value, onChange = () => {} } = props;\r\n  const ref = useRef();\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  const arrow = clsx('arrow', expand ? 'up' : 'down');\r\n  const imageURL = `${process.env.PUBLIC_URL}/images/dungeon/${value}.png`;\r\n\r\n  const toggleSelect = () => {\r\n    setExpand(prevExpand => !prevExpand);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const val = e.currentTarget.getAttribute('value');\r\n    onChange({ name, value: val });\r\n\r\n    if (ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const closeOptions = () => {\r\n      setExpand(false);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        window.addEventListener('click', closeOptions);\r\n      } else {\r\n        window.removeEventListener('click', closeOptions);\r\n      }\r\n    }, 0);\r\n\r\n    return () => {\r\n      window.removeEventListener('click', closeOptions);\r\n    };\r\n  }, [expand]);\r\n\r\n  return (\r\n    <div className=\"select select-enemy\">\r\n      <div\r\n        ref={ref}\r\n        className=\"select-control white\"\r\n        style={{\r\n          backgroundImage: `url(${imageURL})`,\r\n        }}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n        onClick={toggleSelect}\r\n        onKeyDown={null}\r\n      >\r\n        <span className={arrow} />\r\n      </div>\r\n\r\n      {expand && (\r\n        <ul className=\"select-list\">\r\n          {enemyOptions.map(opt => {\r\n            const optClass = clsx('select-option', {\r\n              focus: opt === value,\r\n            });\r\n            return (\r\n              <li\r\n                key={opt}\r\n                role=\"option\"\r\n                aria-selected={opt === value}\r\n                className={optClass}\r\n                value={opt}\r\n                onClick={handleChange}\r\n                onKeyDown={null}\r\n              >\r\n                <Image name={opt} image={`dungeon/${opt}`} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SelectEnemy;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getDamage } from 'utils';\r\n\r\nfunction DamageBar(props) {\r\n  const { hp, min, max } = props;\r\n\r\n  let pct;\r\n  if (hp > max) {\r\n    pct = 100;\r\n  } else if (hp <= min) {\r\n    pct = 0;\r\n  } else {\r\n    pct = (100 * (hp - 1 - min)) / (max - min);\r\n  }\r\n\r\n  const background =\r\n    `linear-gradient(120deg, green, #4ba946 ` +\r\n    `${pct}%, #deb887 ${pct + 5}%, #be3223 , #800000)`;\r\n\r\n  return (\r\n    <div id=\"damage-bar\" style={{ background }}>\r\n      <span>{min}</span>\r\n      <span style={{ fontSize: '20px' }}>{`${hp} (${pct.toFixed(2)}%)`}</span>\r\n      <span>{max}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { hp, min, max } = getDamage(state, props);\r\n  return { hp, min, max };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DamageBar);\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { COABILITY_VALUE, ELEMENT_ADV_TO_ENEMY, ENEMY_INFO } from 'data';\r\nimport { Input, Select } from 'components';\r\nimport { getPaperBGC } from 'utils';\r\nimport locales from 'locales';\r\nimport SelectEnemy from './SelectEnemy';\r\nimport DamageBar from './DamageBar';\r\n\r\nconst fields = ['multiplier', 'exHp', 'hp', 'exDef', 'def', 'res', 'dcrStr'];\r\nconst AxeEXCritDamage = ['10450102', '10450302'];\r\n\r\nfunction Dungeon({ adventurer, lang, theme }) {\r\n  const [settings, setSettings] = useState({\r\n    dcrStr: '',\r\n    def: '',\r\n    difficulty: 'VH',\r\n    enemy: '',\r\n    exHp: '',\r\n    exDef: '',\r\n    hp: '',\r\n    multiplier: '',\r\n    res: '',\r\n  });\r\n\r\n  const eleRef = useRef();\r\n\r\n  const difficultyOptions = useMemo(() => {\r\n    return ['EX', 'VH', 'H', 'N'].map(value => ({\r\n      value,\r\n      label: locales(value, lang),\r\n    }));\r\n  }, [lang]);\r\n\r\n  const handleSelect = useCallback(({ name, value }) => {\r\n    setSettings(prevSettings => ({ ...prevSettings, [name]: value }));\r\n  }, []);\r\n\r\n  const handleInput = useCallback(e => {\r\n    const { name, value } = e.target;\r\n    setSettings(prevSettings => ({ ...prevSettings, [name]: value }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (settings.enemy !== '') {\r\n      const { multiplier } = ENEMY_INFO[settings.enemy].info[\r\n        settings.difficulty\r\n      ];\r\n      setSettings(prevSettings => ({ ...prevSettings, multiplier }));\r\n    }\r\n  }, [settings.enemy, settings.difficulty]);\r\n\r\n  useEffect(() => {\r\n    const { Element, Weapon, Id, Rarity, ex } = adventurer || {};\r\n\r\n    if (eleRef.current !== Element) {\r\n      const enemy = ELEMENT_ADV_TO_ENEMY[Element];\r\n      setSettings(prevSettings => ({\r\n        ...prevSettings,\r\n        enemy,\r\n      }));\r\n\r\n      eleRef.current = Element;\r\n    }\r\n\r\n    let exHp = '';\r\n    let exDef = '';\r\n\r\n    if (Weapon === 'Axe' || Weapon === 'Lance') {\r\n      const value = COABILITY_VALUE[Weapon][Rarity][ex];\r\n\r\n      if (Weapon === 'Axe' && !AxeEXCritDamage.includes(Id)) {\r\n        exDef = value;\r\n      } else if (Weapon === 'Lance') {\r\n        exHp = value;\r\n      }\r\n    }\r\n\r\n    setSettings(prevSettings => ({\r\n      ...prevSettings,\r\n      exHp,\r\n      exDef,\r\n    }));\r\n    // eslint-disable-next-line\r\n  }, [adventurer.Id, adventurer.ex]);\r\n\r\n  return (\r\n    <>\r\n      <SelectEnemy\r\n        name=\"enemy\"\r\n        value={settings.enemy}\r\n        onChange={handleSelect}\r\n      />\r\n\r\n      <div className=\"grid-2 paper\" style={getPaperBGC(theme)}>\r\n        <div>\r\n          {locales('difficulty', lang)}\r\n          <Select\r\n            name=\"difficulty\"\r\n            options={difficultyOptions}\r\n            label={locales(settings.difficulty, lang)}\r\n            value={settings.difficulty}\r\n            onChange={handleSelect}\r\n          />\r\n        </div>\r\n        {fields.map(key => {\r\n          const step = key === 'multiplier' ? '0.01' : '1';\r\n          return (\r\n            <div key={key}>\r\n              {locales(key, lang)}\r\n              <Input\r\n                name={key}\r\n                step={step}\r\n                value={settings[key]}\r\n                onChange={handleInput}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {adventurer && <DamageBar settings={settings} />}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    theme: state.theme,\r\n    adventurer: state.items.adventurer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dungeon);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { refs } from 'utils';\r\nimport StatsTable from './StatsTable';\r\nimport Dungeon from './Dungeon';\r\n\r\nfunction Col1({ adventurer, lang }) {\r\n  const [expend, setExpend] = useState(false);\r\n\r\n  return (\r\n    <div id=\"stats-col1\" ref={refs.col1}>\r\n      {adventurer && (\r\n        <>\r\n          <StatsTable\r\n            disabled={adventurer === null}\r\n            lang={lang}\r\n            expend={expend}\r\n            setExpend={setExpend}\r\n          />\r\n          {!expend && <Dungeon lang={lang} />}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { adventurer } = state.items;\r\n  return { adventurer };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Col1);\r\n","import Col1 from './Col1';\r\n\r\nexport default Col1;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { delBuild, loadBuild, saveBuild } from 'actions';\r\nimport content from 'data';\r\nimport { Image } from 'components';\r\nimport { getImage } from 'utils';\r\n\r\nfunction SplitBtn({ adventurer, builds, delBuild, loadBuild, saveBuild }) {\r\n  const [expand, setExpand] = useState(false);\r\n  const disabled = builds === null;\r\n  const arrowClassName = clsx('arrow', expand ? 'up' : 'down', { disabled });\r\n\r\n  const toggleExpand = () => {\r\n    setExpand(prevState => !prevState);\r\n  };\r\n\r\n  const handleSelect = e => {\r\n    const { value } = e.currentTarget;\r\n    if (e.target.name === 'del') {\r\n      delBuild(value);\r\n    } else {\r\n      const build = builds[value];\r\n      loadBuild(build);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const closeOptions = () => {\r\n      setExpand(false);\r\n    };\r\n\r\n    setTimeout(() => {\r\n      if (expand) {\r\n        window.addEventListener('click', closeOptions);\r\n      } else {\r\n        window.removeEventListener('click', closeOptions);\r\n      }\r\n    }, 0);\r\n\r\n    return () => {\r\n      window.removeEventListener('click', closeOptions);\r\n    };\r\n  }, [expand]);\r\n\r\n  return (\r\n    <div className=\"split-btn\">\r\n      <button type=\"button\" disabled={adventurer === null} onClick={saveBuild}>\r\n        SAVE\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={clsx('toggle-split', { disabled })}\r\n        disabled={disabled}\r\n        onClick={toggleExpand}\r\n      >\r\n        <span className={arrowClassName} />\r\n      </button>\r\n\r\n      {expand && builds && (\r\n        <ul className=\"select-list\">\r\n          {Object.entries(builds).map(([key]) => {\r\n            const item = content.adventurer[key];\r\n            const image = getImage(item, 'adventurer');\r\n            return (\r\n              <li\r\n                key={key}\r\n                role=\"option\"\r\n                aria-selected={false}\r\n                className=\"select-option\"\r\n                value={key}\r\n                onClick={handleSelect}\r\n                onKeyDown={null}\r\n              >\r\n                <Image image={image} size=\"md\" />\r\n                <button type=\"button\" name=\"del\">\r\n                  <Image image=\"icon/cross\" />\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ builds, items: { adventurer } }) => {\r\n  return { adventurer, builds };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  delBuild,\r\n  loadBuild,\r\n  saveBuild,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SplitBtn);\r\n","import React, { memo, useMemo } from 'react';\r\nimport { Select } from 'components';\r\n\r\nconst SELECT_OPTIONS = {\r\n  mana: {\r\n    '3': ['30', '20', '10', '0'],\r\n    '4': ['40', '30', '20', '10', '0'],\r\n    '5': ['50', '45', '40', '30', '20', '10', '0'],\r\n  },\r\n  curRarity: {\r\n    '3': ['5', '4', '3'],\r\n    '4': ['5', '4'],\r\n    '5': ['5'],\r\n  },\r\n  default: ['4', '3', '2', '1', '0'],\r\n};\r\n\r\nconst SelectItem = memo(function SelectItem(props) {\r\n  const { name, value, rarity, spiral, onChange } = props;\r\n\r\n  const options = useMemo(() => {\r\n    let options = [];\r\n    switch (name) {\r\n      case 'mana': {\r\n        if (spiral && rarity === '5') {\r\n          options = ['70', ...SELECT_OPTIONS.mana['5']];\r\n        } else {\r\n          options = SELECT_OPTIONS[name][rarity];\r\n        }\r\n        break;\r\n      }\r\n      case 'curRarity':\r\n        options = SELECT_OPTIONS[name][rarity];\r\n        break;\r\n      case 'ex':\r\n      case 'unbind':\r\n        options = SELECT_OPTIONS.default;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return options.map(val => ({ value: val, label: val }));\r\n  }, [name, rarity, spiral]);\r\n\r\n  const disabled = options.length < 2;\r\n\r\n  return (\r\n    <Select\r\n      disabled={disabled}\r\n      name={name}\r\n      value={value}\r\n      options={options}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n});\r\n\r\nexport default SelectItem;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport locales from 'locales';\r\nimport { updateItem } from 'actions';\r\nimport { Input } from 'components';\r\nimport { getLimit, getPaperBGC, useEvent } from 'utils';\r\nimport SelectItem from './SelectItem';\r\n\r\nconst getItemFields = key => {\r\n  if (key === 'adventurer') {\r\n    return ['level', 'curRarity', 'augHp', 'augStr', 'mana', 'ex'];\r\n  }\r\n\r\n  if (key === 'dragon') {\r\n    return ['level', 'unbind', 'augHp', 'augStr', 'bond'];\r\n  }\r\n\r\n  return ['level', 'unbind', 'augHp', 'augStr'];\r\n};\r\n\r\nfunction Item({ focused, item, lang, theme, updateItem }) {\r\n  const { level, bond, curRarity, Rarity, unbind } = item || {};\r\n\r\n  const timeRef = useRef();\r\n  const fields = getItemFields(focused);\r\n\r\n  const changeInput = e => {\r\n    const { name, value } = e.target;\r\n\r\n    let max;\r\n    if (focused === 'adventurer' && item.LimitBreak === '5') {\r\n      max = 100;\r\n    } else {\r\n      const key1 = name === 'level' ? focused : name;\r\n      const r = focused === 'adventurer' ? curRarity : Rarity;\r\n      max = getLimit(key1, r, unbind);\r\n    }\r\n\r\n    const val = value > max ? max : value;\r\n    if (item[name] === val) return;\r\n    updateItem({ itemKey: focused, updates: { [name]: val } });\r\n  };\r\n\r\n  const getUpdates = (key, value) => {\r\n    if (item[key] === value) return null;\r\n    let updates = { [key]: value };\r\n\r\n    switch (key) {\r\n      case 'curRarity': {\r\n        updates = {\r\n          ...updates,\r\n          level: getLimit(focused, value),\r\n          mana: getLimit('mana', value),\r\n          ex: value === '5' ? '4' : '0',\r\n        };\r\n        break;\r\n      }\r\n      case 'mana': {\r\n        const limit = getLimit(focused, curRarity);\r\n        updates.ex = value >= '50' ? '4' : '0';\r\n\r\n        if (value === '70') {\r\n          updates.level = 100;\r\n        } else if (level > limit) {\r\n          updates.level = limit;\r\n        }\r\n\r\n        break;\r\n      }\r\n      case 'ex':\r\n        updates = {\r\n          ...updates,\r\n          curRarity: '5',\r\n          mana: '45',\r\n        };\r\n        break;\r\n      case 'unbind': {\r\n        const level = getLimit(focused, Rarity, value);\r\n        updates.level = level;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return updates;\r\n  };\r\n\r\n  const handleChange = useEvent(({ name, value }) => {\r\n    const updates = getUpdates(name, value);\r\n    if (updates === null) return;\r\n    updateItem({ itemKey: focused, updates });\r\n  });\r\n\r\n  const onClick = e => {\r\n    const { name } = e.target;\r\n    const max = getLimit(name);\r\n    const value = Number(item[name]) === max ? '' : max;\r\n    updateItem({ itemKey: focused, updates: { [name]: value } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    clearTimeout(timeRef.current);\r\n    let key;\r\n    if (level === '' || level === '0') {\r\n      key = 'level';\r\n    } else if (bond === '' || bond === '0') {\r\n      key = 'bond';\r\n    }\r\n\r\n    if (key !== undefined) {\r\n      timeRef.current = setTimeout(() => {\r\n        updateItem({ itemKey: focused, updates: { [key]: 1 } });\r\n      }, 1000);\r\n    }\r\n  }, [level, bond, focused, updateItem]);\r\n\r\n  if (item === null) return null;\r\n\r\n  return (\r\n    <div className=\"grid-2 paper\" style={getPaperBGC(theme)}>\r\n      {fields.map(key => {\r\n        const { [key]: value = '' } = item;\r\n\r\n        if (\r\n          key === 'curRarity' ||\r\n          key === 'unbind' ||\r\n          key === 'mana' ||\r\n          key === 'ex'\r\n        ) {\r\n          let r;\r\n          if (key === 'curRarity') {\r\n            r = Rarity;\r\n          } else if (key === 'mana') {\r\n            r = curRarity;\r\n          }\r\n\r\n          return (\r\n            <div key={key}>\r\n              {locales(key, lang)}\r\n              <SelectItem\r\n                key={key}\r\n                name={key}\r\n                value={value}\r\n                rarity={r}\r\n                spiral={item.breakLimit === 5}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (key === 'augHp' || key === 'augStr') {\r\n          const max = getLimit(key);\r\n          const arrowClassName = clsx(\r\n            'arrow',\r\n            Number(value) === max ? 'left' : 'right'\r\n          );\r\n          return (\r\n            <div key={key}>\r\n              {locales(key, lang)}\r\n              <div className=\"input-btn\">\r\n                <Input name={key} value={value} onChange={changeInput} />\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  tabIndex=\"-1\"\r\n                  name={key}\r\n                  onClick={onClick}\r\n                >\r\n                  <span className={arrowClassName} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div key={key}>\r\n            {locales(key, lang)}\r\n            <Input name={key} value={value} onChange={changeInput} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { focused, items, theme } = state;\r\n  return {\r\n    focused,\r\n    theme,\r\n    item: items[focused],\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  updateItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport locales from 'locales';\r\nimport { maxItem, resetItems, saveBuild, selectFocus } from 'actions';\r\nimport { getImage, getPaperBGC, refs } from 'utils';\r\nimport { ITEM_KEYS } from 'data';\r\nimport { Image } from 'components';\r\nimport SplitBtn from './SplitBtn';\r\nimport Item from './Item';\r\n\r\nfunction Col2(props) {\r\n  const {\r\n    focused,\r\n    items,\r\n    lang,\r\n    maxItem,\r\n    theme,\r\n    resetItems,\r\n    selectFocus,\r\n  } = props;\r\n\r\n  const handleFocus = useCallback(\r\n    (_, value) => {\r\n      selectFocus(value);\r\n    },\r\n    [selectFocus]\r\n  );\r\n\r\n  const handleReset = () => {\r\n    resetItems();\r\n    window.scroll(refs.col2.current.offsetTop - 48, 0);\r\n  };\r\n\r\n  const setMax = e => {\r\n    maxItem(e.target.name);\r\n  };\r\n\r\n  return (\r\n    <div id=\"stats-col2\" ref={refs.col2}>\r\n      <div className=\"grid-2\">\r\n        <SplitBtn />\r\n        <button type=\"button\" onClick={handleReset}>\r\n          reset\r\n        </button>\r\n      </div>\r\n      <div className=\"avatar-list paper\" style={getPaperBGC(theme)}>\r\n        {ITEM_KEYS.map(key => {\r\n          const className = clsx('avatar', { active: key === focused });\r\n          const { [key]: item } = items;\r\n          const title =\r\n            item === null\r\n              ? locales(key, lang)\r\n              : item.Name[lang] || item.Name.en;\r\n          const image = getImage(item, key);\r\n          const { augHp = '', augStr = '' } = item || {};\r\n          const augments = Number(augHp) + Number(augStr);\r\n\r\n          return (\r\n            <div key={key} className=\"avatar-item\">\r\n              <div className={className}>\r\n                <Image\r\n                  name={key}\r\n                  image={image}\r\n                  title={title}\r\n                  onClick={handleFocus}\r\n                />\r\n                {augments !== 0 && <span>{`+${augments}`}</span>}\r\n              </div>\r\n\r\n              {item !== null && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"max-button\"\r\n                  name={key}\r\n                  onClick={setMax}\r\n                >\r\n                  MAX\r\n                </button>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Item lang={lang} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ focused, items, theme }) => {\r\n  return { focused, items, theme };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  maxItem,\r\n  resetItems,\r\n  saveBuild,\r\n  selectFocus,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Col2);\r\n","import Col2 from './Col2';\r\n\r\nexport default Col2;\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectOption, resetOptions } from 'actions';\r\nimport { getFilterFields, getPaperBGC } from 'utils';\r\nimport { CheckSet, Input } from 'components';\r\n\r\nfunction Filter(props) {\r\n  const {\r\n    fields,\r\n    lang,\r\n    options,\r\n    search,\r\n    theme,\r\n    resetOptions,\r\n    selectOption,\r\n    setSearch,\r\n  } = props;\r\n\r\n  const handleFilter = useCallback(\r\n    e => {\r\n      const { checked, name, value } = e.target;\r\n      selectOption({ checked, name, value });\r\n    },\r\n    [selectOption]\r\n  );\r\n\r\n  const handleSearch = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    resetOptions();\r\n    setSearch('');\r\n  };\r\n\r\n  return (\r\n    <div id=\"item-filter\" className=\"paper\" style={getPaperBGC(theme)}>\r\n      <div id=\"item-options\">\r\n        {fields.map(key => (\r\n          <CheckSet\r\n            icon\r\n            key={key}\r\n            group={key}\r\n            lang={lang}\r\n            options={options[key]}\r\n            onChange={handleFilter}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"input-btn\">\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          value={search}\r\n          onChange={handleSearch}\r\n        />\r\n\r\n        <button type=\"button\" onClick={resetFilters}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ focused, options, theme }) => {\r\n  const fields = getFilterFields(focused);\r\n  return {\r\n    fields,\r\n    options,\r\n    theme,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  selectOption,\r\n  resetOptions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { selectItem } from 'actions';\r\nimport { getImage, getOutBGC, refs, scrollTo, useEvent } from 'utils';\r\nimport { Image } from 'components';\r\n\r\nfunction Item(props) {\r\n  const { data, focused, index, style, theme, selectItem } = props;\r\n  const { lang = 'en' } = useParams();\r\n  const item = data[index];\r\n  const {\r\n    Skill,\r\n    Icon,\r\n    Name: { [lang]: name, en },\r\n  } = item;\r\n  const image = getImage(item, focused);\r\n\r\n  const handleClick = useEvent(() => {\r\n    selectItem(focused, item);\r\n    scrollTo(refs.col2);\r\n  });\r\n\r\n  return (\r\n    <div className=\"item\" style={style}>\r\n      <div className=\"item-content\" style={getOutBGC(theme)}>\r\n        <Image image={image} size=\"md\" onClick={handleClick} />\r\n        <span className=\"name\">{name || en}</span>\r\n\r\n        {focused === 'weapon' &&\r\n          (Skill ? (\r\n            <Image\r\n              size=\"sm\"\r\n              image={`skills/${Skill.Image}`}\r\n              title={Skill.Name}\r\n            />\r\n          ) : (\r\n            <span />\r\n          ))}\r\n\r\n        {Icon &&\r\n          Icon.map(icon => (\r\n            <Image\r\n              key={icon.Name}\r\n              size=\"sm\"\r\n              image={`abilities/Icon_Ability_${icon.Image}`}\r\n              title={icon.Name}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ focused, theme }) => {\r\n  return { focused, theme };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  selectItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FixedSizeList } from 'react-window';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { getItemList, getPaperBGC } from 'utils';\r\nimport Item from './Item';\r\n\r\nfunction ItemList({ options, focused, list, theme }) {\r\n  const listRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (listRef.current) {\r\n      listRef.current.scrollToItem(0);\r\n    }\r\n  }, [focused, options]);\r\n\r\n  return (\r\n    <div className=\"list\" style={getPaperBGC(theme)}>\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <FixedSizeList\r\n            ref={listRef}\r\n            height={height}\r\n            width={width}\r\n            itemSize={68}\r\n            itemCount={list.length}\r\n            itemData={list}\r\n          >\r\n            {Item}\r\n          </FixedSizeList>\r\n        )}\r\n      </AutoSizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const { focused, options, theme } = state;\r\n  return {\r\n    focused,\r\n    options,\r\n    theme,\r\n    list: getItemList(state, props),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ItemList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Filter from './Filter';\r\nimport ItemList from './ItemList';\r\n\r\nfunction Items({ focused, lang }) {\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    setSearch('');\r\n  }, [focused]);\r\n\r\n  return (\r\n    <>\r\n      <Filter lang={lang} search={search} setSearch={setSearch} />\r\n      <ItemList lang={lang} search={search} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ focused }) => {\r\n  return {\r\n    focused,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Items);\r\n","import Items from './Items';\r\n\r\nexport default Items;\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport locales from 'locales';\r\nimport { updateHalidom } from 'actions';\r\nimport { getFacilityMaxLevel } from 'utils';\r\nimport { Image, Slider } from 'components';\r\n\r\nfunction HalidomItem({ halidomKey, item, style, updateHalidom }) {\r\n  const { lang } = useParams();\r\n  const { id, level } = item;\r\n  const image = `facility/${id}`;\r\n  const title = locales(id, lang, 'halidom');\r\n\r\n  const max = getFacilityMaxLevel(item);\r\n\r\n  const handleChange = useCallback(\r\n    ({ name, value }) => {\r\n      updateHalidom({ halidomKey: name, level: value });\r\n    },\r\n    [updateHalidom]\r\n  );\r\n\r\n  return (\r\n    <div style={style} className=\"halidom-item\">\r\n      <Image image={image} size=\"lg\" title={title} />\r\n      <Slider\r\n        name={halidomKey}\r\n        value={level}\r\n        max={max}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getHalidomKey = props => {\r\n  const { halidomKey, data, columnIndex, rowIndex } = props;\r\n  if (halidomKey) {\r\n    return halidomKey;\r\n  }\r\n\r\n  const { cols, keyArr } = data;\r\n  return keyArr[cols * rowIndex + columnIndex];\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const halidomKey = getHalidomKey(props);\r\n  return {\r\n    halidomKey,\r\n    item: state.halidom[halidomKey],\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { updateHalidom };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HalidomItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadHalidom } from 'actions';\r\nimport {\r\n  getFilteredHalidomKey,\r\n  getPaperBGC,\r\n  removeState,\r\n  saveState,\r\n  useEvent,\r\n} from 'utils';\r\nimport { BtnPanel } from 'components';\r\nimport HalidomItem from './HalidomItem';\r\n\r\nconst btns = ['del', 'refresh', 'save'];\r\n\r\nfunction Halidom({ halidom, keyList, theme, loadHalidom }) {\r\n  const onClick = useEvent(e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'del':\r\n        removeState('dragalialost-halidom');\r\n        break;\r\n      case 'refresh':\r\n        loadHalidom();\r\n        break;\r\n      case 'save':\r\n        saveState('dragalialost-halidom', halidom);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (keyList === null) return null;\r\n\r\n  return (\r\n    <>\r\n      <BtnPanel btns={btns} onClick={onClick} />\r\n      <div className=\"list paper\" style={getPaperBGC(theme)}>\r\n        {keyList.map(key => (\r\n          <HalidomItem key={key} halidomKey={key} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    halidom: state.halidom,\r\n    theme: state.theme,\r\n    keyList: getFilteredHalidomKey(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { loadHalidom };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Halidom);\r\n","import Halidom from './Halidom';\r\n\r\nexport default Halidom;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPanel } from 'actions';\r\nimport { refs } from 'utils';\r\nimport { Checkbox } from 'components';\r\nimport Items from './Items';\r\nimport Halidom from './Halidom';\r\n\r\nfunction Col3({ adventurer, lang, panel, setPanel }) {\r\n  const disabled = adventurer === null;\r\n\r\n  return (\r\n    <div id=\"stats-col3\" ref={refs.col3}>\r\n      <div>\r\n        <Checkbox\r\n          disabled={disabled}\r\n          checked={panel}\r\n          lang={lang}\r\n          value=\"halidom\"\r\n          setChecked={setPanel}\r\n        />\r\n      </div>\r\n\r\n      {panel ? <Halidom /> : <Items lang={lang} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ items, panel }) => {\r\n  return {\r\n    panel,\r\n    adventurer: items.adventurer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setPanel,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Col3);\r\n","import Col3 from './Col3';\r\n\r\nexport default Col3;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { loadHalidom, loadBuilds, selectFocus } from 'actions';\r\nimport Col1 from './Col1';\r\nimport Col2 from './Col2';\r\nimport Col3 from './Col3';\r\n\r\nfunction Stats({ loadBuilds, loadHalidom, selectFocus }) {\r\n  const { lang = 'en' } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadHalidom();\r\n    loadBuilds();\r\n    selectFocus('adventurer');\r\n  }, [loadBuilds, loadHalidom, selectFocus]);\r\n\r\n  return (\r\n    <main id=\"stats\">\r\n      <Col1 lang={lang} />\r\n      <Col2 lang={lang} />\r\n      <Col3 lang={lang} />\r\n    </main>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadHalidom,\r\n  loadBuilds,\r\n  selectFocus,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Stats);\r\n","import Stats from './Stats';\r\n\r\nexport default Stats;\r\n"],"sourceRoot":""}